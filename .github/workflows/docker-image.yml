name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Cache Docker layers
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Log in to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
      with:
        region: us-east-1

    - name: Build Docker image
      run: |
        docker buildx build --platform linux/arm64 -t my-lambda-function .

    - name: Tag Docker image
      run: |
        IMAGE_TAG=latest
        ECR_REPOSITORY=732385684161.dkr.ecr.us-east-1.amazonaws.com/my-lambda-function
        docker tag my-lambda-function:latest $ECR_REPOSITORY:$IMAGE_TAG

    - name: Push Docker image to ECR
      run: |
        IMAGE_TAG=latest
        ECR_REPOSITORY=732385684161.dkr.ecr.us-east-1.amazonaws.com/my-lambda-function
        docker push $ECR_REPOSITORY:$IMAGE_TAG

    - name: Update Lambda function
      run: |
        REGION=us-east-1
        IMAGE_TAG=latest
        ECR_REPOSITORY=732385684161.dkr.ecr.us-east-1.amazonaws.com/my-lambda-function
        aws lambda update-function-code --function-name mylambdastack-LambdaFunction-V79cQI3FIzzY --image-uri $ECR_REPOSITORY:$IMAGE_TAG --region $REGION

  test:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run unit tests
      run: |
        pytest